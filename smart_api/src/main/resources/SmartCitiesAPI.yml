
openapi: 3.0.3
info:
  title: Smart Cities API
  description: API documentation for Smart Cities application
  version: 1.0.0
  
servers:
  - url: http://localhost:8080
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

    
  schemas:
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
          
    AuthenticationRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: "user@example.com"
        password:
          type: string
          format: password
          example: "password123"
          
    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        
    Incident:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [REPORTED, IN_PROGRESS, RESOLVED]
        location:
          type: object
          properties:
            latitude:
              type: number
              format: double
            longitude:
              type: number
              format: double
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

security:
  - bearerAuth: []

paths:
  /api/auth/login:
    post:
      tags:
        - Authentication
      security: []
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
      responses:
        '200':
          description: Successfully authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/incidents:
    get:
      tags:
        - Incidents
      summary: Get all incidents
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [REPORTED, IN_PROGRESS, RESOLVED]
          description: Filter incidents by status
      responses:
        '200':
          description: List of incidents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Incident'
    
    post:
      tags:
        - Incidents
      summary: Create new incident
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Incident'
      responses:
        '201':
          description: Incident created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/incidents/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
        description: Incident ID
    
    get:
      tags:
        - Incidents
      summary: Get incident by ID
      responses:
        '200':
          description: Incident details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
        '404':
          description: Incident not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    put:
      tags:
        - Incidents
      summary: Update incident
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Incident'
      responses:
        '200':
          description: Incident updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
        '404':
          description: Incident not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    delete:
      tags:
        - Incidents
      summary: Delete incident
      responses:
        '204':
          description: Incident deleted
        '404':
          description: Incident not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'